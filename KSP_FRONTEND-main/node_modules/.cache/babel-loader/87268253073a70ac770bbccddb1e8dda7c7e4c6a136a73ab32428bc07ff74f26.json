{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\KSP_FRONTEND-main\\\\KSP_FRONTEND-main\\\\src\\\\Components\\\\Predict.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import { Chart as ChartJS } from \"chart.js/auto\";\nimport { Line } from \"react-chartjs-2\";\nimport mappingDict from \"../utils/mapping_dict.json\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Predict = () => {\n  _s();\n  const [date, setDate] = useState(\"\");\n  const [policeUnit, setPoliceUnit] = useState(\"\");\n  const [policeUnitName, setPoliceUnitName] = useState(\"\");\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Prediction Output\",\n      data: [],\n      fill: false,\n      borderColor: \"rgb(75, 192, 192)\",\n      tension: 0.1\n    }]\n  });\n\n  // Invert mapping dictionary to map names to IDs\n  const [unitOptions, setUnitOptions] = useState({});\n  useEffect(() => {\n    const invertedMapping = Object.entries(mappingDict).reduce((acc, [key, value]) => {\n      acc[value] = key;\n      return acc;\n    }, {});\n    setUnitOptions(invertedMapping);\n  }, []);\n  const handleDateChange = e => {\n    setDate(e.target.value);\n  };\n  const handleUnitChange = e => {\n    setPoliceUnitName(e.target.value);\n    setPoliceUnit(unitOptions[e.target.value]);\n  };\n  const prepareDataAndPredict = () => {\n    const payload = {\n      date,\n      policeUnit: policeUnit\n    };\n    fetch(\"http://localhost:5000/predict\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    }).then(response => response.json()).then(data => {\n      const updatedChartData = {\n        labels: data.map(item => `${item.hour}:00`),\n        datasets: [{\n          label: \"Prediction Output\",\n          data: data.map(item => item.value),\n          fill: false,\n          borderColor: \"rgb(75, 192, 192)\",\n          tension: 0.1\n        }]\n      };\n      setChartData(updatedChartData);\n    }).catch(error => {\n      console.error(\"Error during prediction:\", error);\n    });\n  };\n\n  // Define chart size here\n  const chartStyles = {\n    width: \"1000px\",\n    height: \"100vh\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        marginTop: \"70px\",\n        left: \"293px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row gap-2\",\n        style: {\n          justifyContent: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: handleDateChange,\n          style: {\n            // background: \"gray\",\n            padding: \"4px\",\n            borderRadius: \"5px\",\n            width: \"max-content\",\n            gap: \"5px\",\n            boxShadow: \"inset #d9d1d1 0px 0px 2px 1px, #949494 2px 2px 5px 0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: policeUnitName,\n          onChange: handleUnitChange,\n          style: {\n            width: \"max-content\",\n            borderRadius: \"5px\",\n            gap: \"5px\",\n            boxShadow: \"inset #d9d1d1 0px 0px 2px 1px, #949494 2px 2px 5px 0px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Police Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), Object.keys(unitOptions).map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: unit,\n            children: unit\n          }, unit, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prepareDataAndPredict,\n          style: {\n            width: \"max-content\",\n            borderRadius: \"5px\",\n            gap: \"5px\",\n            padding: \"4px\",\n            boxShadow: \"inset #d9d1d1 0px 0px 2px 1px, #949494 2px 2px 5px 0px\"\n          },\n          children: \"Predict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: chartStyles,\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Predict, \"1uX3TAvbjjZZVX7BPmS+An7ZZBs=\");\n_c = Predict;\nexport default Predict;\nvar _c;\n$RefreshReg$(_c, \"Predict\");","map":{"version":3,"names":["React","useState","useEffect","Line","mappingDict","Navbar","jsxDEV","_jsxDEV","Predict","_s","date","setDate","policeUnit","setPoliceUnit","policeUnitName","setPoliceUnitName","chartData","setChartData","labels","datasets","label","data","fill","borderColor","tension","unitOptions","setUnitOptions","invertedMapping","Object","entries","reduce","acc","key","value","handleDateChange","e","target","handleUnitChange","prepareDataAndPredict","payload","fetch","method","headers","body","JSON","stringify","then","response","json","updatedChartData","map","item","hour","catch","error","console","chartStyles","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","marginTop","left","className","justifyContent","type","onChange","padding","borderRadius","gap","boxShadow","keys","unit","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/KSP_FRONTEND-main/KSP_FRONTEND-main/src/Components/Predict.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// import { Chart as ChartJS } from \"chart.js/auto\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport mappingDict from \"../utils/mapping_dict.json\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst Predict = () => {\r\n  const [date, setDate] = useState(\"\");\r\n  const [policeUnit, setPoliceUnit] = useState(\"\");\r\n  const [policeUnitName, setPoliceUnitName] = useState(\"\");\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"Prediction Output\",\r\n        data: [],\r\n        fill: false,\r\n        borderColor: \"rgb(75, 192, 192)\",\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  });\r\n\r\n  // Invert mapping dictionary to map names to IDs\r\n  const [unitOptions, setUnitOptions] = useState({});\r\n  useEffect(() => {\r\n    const invertedMapping = Object.entries(mappingDict).reduce(\r\n      (acc, [key, value]) => {\r\n        acc[value] = key;\r\n        return acc;\r\n      },\r\n      {}\r\n    );\r\n    setUnitOptions(invertedMapping);\r\n  }, []);\r\n\r\n  const handleDateChange = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n\r\n  const handleUnitChange = (e) => {\r\n    setPoliceUnitName(e.target.value);\r\n    setPoliceUnit(unitOptions[e.target.value]);\r\n  };\r\n\r\n  const prepareDataAndPredict = () => {\r\n    const payload = {\r\n      date,\r\n      policeUnit: policeUnit,\r\n    };\r\n\r\n    fetch(\"http://localhost:5000/predict\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const updatedChartData = {\r\n          labels: data.map((item) => `${item.hour}:00`),\r\n          datasets: [\r\n            {\r\n              label: \"Prediction Output\",\r\n              data: data.map((item) => item.value),\r\n              fill: false,\r\n              borderColor: \"rgb(75, 192, 192)\",\r\n              tension: 0.1,\r\n            },\r\n          ],\r\n        };\r\n        setChartData(updatedChartData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error during prediction:\", error);\r\n      });\r\n  };\r\n\r\n  // Define chart size here\r\n  const chartStyles = {\r\n    width: \"1000px\",\r\n    height: \"100vh\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          marginTop: \"70px\",\r\n          left: \"293px\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"flex flex-row gap-2\"\r\n          style={{ justifyContent: \"center\" }}\r\n        >\r\n          <input\r\n            type=\"date\"\r\n            value={date}\r\n            onChange={handleDateChange}\r\n            style={{\r\n              // background: \"gray\",\r\n              padding: \"4px\",\r\n              borderRadius: \"5px\",\r\n              width: \"max-content\",\r\n              gap: \"5px\",\r\n              boxShadow:\r\n                \"inset #d9d1d1 0px 0px 2px 1px, #949494 2px 2px 5px 0px\",\r\n            }}\r\n          />\r\n          <select\r\n            value={policeUnitName}\r\n            onChange={handleUnitChange}\r\n            style={{\r\n              width: \"max-content\",\r\n              borderRadius: \"5px\",\r\n              gap: \"5px\",\r\n              boxShadow:\r\n                \"inset #d9d1d1 0px 0px 2px 1px, #949494 2px 2px 5px 0px\",\r\n            }}\r\n          >\r\n            <option value=\"\">Select Police Unit</option>\r\n            {Object.keys(unitOptions).map((unit) => (\r\n              <option key={unit} value={unit}>\r\n                {unit}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button\r\n            onClick={prepareDataAndPredict}\r\n            style={{\r\n              width: \"max-content\",\r\n              borderRadius: \"5px\",\r\n              gap: \"5px\",\r\n              padding:\"4px\",\r\n              boxShadow:\r\n                \"inset #d9d1d1 0px 0px 2px 1px, #949494 2px 2px 5px 0px\",\r\n            }}\r\n          >\r\n            Predict\r\n          </button>\r\n        </div>\r\n        <div style={chartStyles}>\r\n          <Line data={chartData} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Predict;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}